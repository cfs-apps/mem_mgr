<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2022 bitValence, Inc.
    All Rights Reserved.

    This program is free software; you can modify and/or redistribute it
    under the terms of the GNU Affero General Public License
    as published by the Free Software Foundation; version 3 with
    attribution addendums as found in the LICENSE.txt.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License for more details.
      
    Purpose: 
      Define MEM_MGR application interfaces 

    Notes:
      1. This file was automatically generated by cFS Basecamp's app
         creation tool. If you edit it, your changes will be lost if
         a new app with the same name is created. 
      2. This document adheres to the Electronic Data Sheet (EDS) XML schema 
         as prescribed in CCSDS book 876.0. 
      
-->
<PackageFile xmlns="http://www.ccsds.org/schema/sois/seds">
  <Package name="MEM_MGR" shortDescription="Memory Manager App">
    <DataTypeSet>

      <Define name="MAX_SYM_LEN" value="64" shortDescription="Max number of symbol name bytes. TODO: When integrate with cFE EDS, replace with OS_MAX_SYM_LEN"/>      
      <StringDataType name="SymbolName" length="${MAX_SYM_LEN}" />

      <Define name="CPU_ADDR_BIT_SIZE"   value="64" shortDescription="TODO: When integrate with cFE EDS, replace with cpuaddr definition"/>
      <IntegerDataType name="CpuAddr" shortDescription="TODO: When integrate with cFE EDS, replace with cpuaddr definition">
        <IntegerDataEncoding sizeInBits="${CPU_ADDR_BIT_SIZE}" encoding="unsigned" />
        <Range>
          <MinMaxRange max="2 ^ (${CPU_ADDR_BIT_SIZE})" min="0" rangeType="inclusiveMinExclusiveMax"/>
        </Range>
      </IntegerDataType>

      <!--
         Things to consider when setting this value:
          1. How long can the system tolerate disabled interrupts?
          2. What's the longest single command length? Will this value require command packet segmentation?
      -->
      <Define name="MAX_INTERRUPTS_DIS_DATA" value="200" shortDescription="Maximum number of bytes for a 'memory load with interrupts disabled' command"/>
      <StringDataType name="InterruptsDisData" length="${MAX_INTERRUPTS_DIS_DATA}" shortDescription="" />
      
      <!--***********************************-->
      <!--**** DataTypeSet:  Entry Types ****-->
      <!--***********************************-->

      <EnumeratedDataType name="MemType" shortDescription="Define memory types. TODO: Check if cFS has definitions" >
        <IntegerDataEncoding sizeInBits="8" encoding="unsigned" />
        <EnumerationList>
          <Enumeration label="UNDEF"  value="1" shortDescription="No memory type has been specified" />
          <Enumeration label="RAM"    value="2" shortDescription="Generic term for RAM including SRAM, DRAM, Memory Mapped I/O, etc." />
          <Enumeration label="NONVOL" value="3" shortDescription="Non-volitale memory including PROM, Flash, EEPROM, etc. " />
        </EnumerationList>
      </EnumeratedDataType>

      <EnumeratedDataType name="MemSize" shortDescription="Names describes bit size and value defines number of bytes, except for UNDEF and VOID" >
        <IntegerDataEncoding sizeInBits="8" encoding="unsigned" />
        <EnumerationList>
          <Enumeration label="UNDEF" value="0" shortDescription="No memory type has been specified" />
          <Enumeration label="8"     value="1" shortDescription="Accessed in 8-bit units" />
          <Enumeration label="16"    value="2" shortDescription="Accessed in 16-bit units" />
          <Enumeration label="32"    value="4" shortDescription="Accessed in 32-bit units" />
          <Enumeration label="VOID"  value="5" shortDescription="No alignmnet restrictions" />
        </EnumerationList>
      </EnumeratedDataType>

      <ContainerDataType name="SymbolAddr">
        <EntryList>
          <Entry name="Offset" type="CpuAddr"     shortDescription="Optional symbol offset that is used as the absolute address if the Name string is NULL" />
          <Entry name="Name"   type="SymbolName"  shortDescription="Symbol name" />
        </EntryList>
      </ContainerDataType>

      <!--
         Directly manipulating memory is risky, therefore it is helpful
         to identify in telemetry the last function performed on memory.
      -->
      
      <EnumeratedDataType name="MemFunction" shortDescription="" >
        <IntegerDataEncoding sizeInBits="8" encoding="unsigned" />
        <EnumerationList>
          <Enumeration label="NONE_PERFORMED"  value="0"  shortDescription="No memory has been performed since initialization or reset" />
          <Enumeration label="PEEK"            value="1"  shortDescription="Read a single memory location" />
          <Enumeration label="POKE"            value="2"  shortDescription="Write a single memory location"/>
          <Enumeration label="LOAD_FROM_FILE"  value="3"  shortDescription="Load memory with data from a file"/>
          <Enumeration label="LOAD_INT_DIS"    value="4"  shortDescription="Load memory with data from command with interrupts disabled"/>
          <Enumeration label="DUMP_TO_FILE"    value="5"  shortDescription=""/>
          <Enumeration label="DUMP_TO_EVENT"   value="6"  shortDescription=""/>
          <Enumeration label="FILL"            value="7"  shortDescription=""/>
        </EnumerationList>
      </EnumeratedDataType>

      <!--
         Load/dump files use the same secondary header file headre (after cFE
         fiel header) so a dump file can be reloaded back into memory if
         desired (providing a memory save and restore capability). 
      -->
      <ContainerDataType name="SecFileHdr" shortDescription="Load/dump file secondary header">
        <EntryList>
          <Entry name="SymbolAddr" type="SymbolAddr" />
          <Entry name="MemType"    type="MemType"    />
          <Entry name="MemSize"    type="MemSize"    />
          <Entry name="ByteCnt"    type="BASE_TYPES/uint8"  />
          <Entry name="CrcType"    type="APP_C_FW/CrcUint8" />
          <Entry name="Crc"        type="BASE_TYPES/uint32" />          
        </EntryList>
      </ContainerDataType>


      <!--***************************************-->
      <!--**** DataTypeSet: Command Payloads ****-->
      <!--***************************************-->

      <ContainerDataType name="Peek_CmdPayload">
        <EntryList>
          <Entry name="SymbolAddr" type="SymbolAddr" />
          <Entry name="MemType"    type="MemType"    />
          <Entry name="MemSize"    type="MemSize"    />
        </EntryList>
      </ContainerDataType>

      <ContainerDataType name="Poke_CmdPayload">
        <EntryList>
          <Entry name="SymbolAddr" type="SymbolAddr" />
          <Entry name="MemType"    type="MemType"    />
          <Entry name="MemSize"    type="MemSize"    />
          <Entry name="Data"       type="BASE_TYPES/uint32" />
        </EntryList>
      </ContainerDataType>

      <ContainerDataType name="LoadWithIntDis_CmdPayload" shortDescription="Load memory ">
        <EntryList>
          <Entry name="SymbolAddr" type="SymbolAddr" />
          <Entry name="MemType"    type="MemType"    />
          <Entry name="MemSize"    type="MemSize"    />
          <Entry name="ByteCnt"    type="BASE_TYPES/uint32" />
          <Entry name="Data"       type="InterruptsDisData" />
          <Entry name="CrcType"    type="APP_C_FW/CrcUint8" />
          <Entry name="Crc"        type="BASE_TYPES/uint32" />  
        </EntryList>
      </ContainerDataType>

      <ContainerDataType name="LoadFromFile_CmdPayload">
        <EntryList>
          <Entry name="Filename" type="BASE_TYPES/PathName" shortDescription="" />
        </EntryList>
      </ContainerDataType>

      <ContainerDataType name="DumpToEvent_CmdPayload" shortDescription="Dump memory contents to an event message">
        <EntryList>
          <Entry name="SymbolAddr" type="SymbolAddr" />
          <Entry name="MemType"    type="MemType"    />
          <Entry name="MemSize"    type="MemSize"    />
          <Entry name="ByteCnt"    type="BASE_TYPES/uint8" />
        </EntryList>
      </ContainerDataType>

      <ContainerDataType name="DumpToFile_CmdPayload">
        <EntryList>
          <Entry name="SymbolAddr" type="SymbolAddr" />
          <Entry name="MemType"    type="MemType"    />
          <Entry name="MemSize"    type="MemSize"    />
          <Entry name="ByteCnt"    type="BASE_TYPES/uint32" />
          <Entry name="Filename"   type="BASE_TYPES/PathName" shortDescription="" />
        </EntryList>
      </ContainerDataType>

      <ContainerDataType name="Fill_CmdPayload" shortDescription="Fill consecutive memory locations with ">
        <EntryList>
          <Entry name="SymbolAddr" type="SymbolAddr" />
          <Entry name="MemType"    type="MemType"    />
          <Entry name="MemSize"    type="MemSize"    />
          <Entry name="ByteCnt"    type="BASE_TYPES/uint32" />
          <Entry name="Data"       type="BASE_TYPES/uint32" />
        </EntryList>
      </ContainerDataType>

      <ContainerDataType name="LookupSymbol_CmdPayload" shortDescription="Lookup and report symbol address in an event message">
        <EntryList>
          <Entry name="Name" type="SymbolName" />
        </EntryList>
      </ContainerDataType>

      <ContainerDataType name="DumpSymTblToFile_CmdPayload">
        <EntryList>
          <Entry name="Filename" type="BASE_TYPES/PathName" shortDescription="" />
        </EntryList>
      </ContainerDataType>

      <ContainerDataType name="EnaEepromWrite_CmdPayload" shortDescription="Enable writing to an EEPROM bank">
        <EntryList>
          <Entry name="Bank" type="BASE_TYPES/uint32" />
        </EntryList>
      </ContainerDataType>

      <ContainerDataType name="DisEepromWrite_CmdPayload" shortDescription="Disable writing to an EEPROM bank">
        <EntryList>
          <Entry name="Bank" type="BASE_TYPES/uint32" />
        </EntryList>
      </ContainerDataType>

            
      <!--*****************************************-->
      <!--**** DataTypeSet: Telemetry Payloads ****-->
      <!--*****************************************-->
    
      <ContainerDataType name="StatusTlm_Payload" shortDescription="App's state and status summary, Historically known as 'housekeeping data'">
        <EntryList>
          <Entry name="ValidCmdCnt"      type="BASE_TYPES/uint16" />
          <Entry name="InvalidCmdCnt"    type="BASE_TYPES/uint16" />
          <Entry name="EepromWriteEna"   type="APP_C_FW/BooleanUint8" />
          <Entry name="LastMemFunction"  type="MemFunction" />
          <Entry name="LastMemAddr"      type="CpuAddr" />
          <Entry name="LastMemType"      type="MemType" />
          <Entry name="LastMemSize"      type="MemSize" />
          <Entry name="LastMemByteCnt"   type="BASE_TYPES/uint32" />
          <Entry name="LastMemFilename"  type="BASE_TYPES/PathName"/>
        </EntryList>
      </ContainerDataType>
      
      <!--**************************************-->
      <!--**** DataTypeSet: Command Packets ****-->
      <!--**************************************-->

      <ContainerDataType name="CommandBase" baseType="CFE_HDR/CommandHeader">
      </ContainerDataType>

      <ContainerDataType name="Noop" baseType="CommandBase" shortDescription="Generate an information event message with app version">
        <ConstraintSet>
          <ValueConstraint entry="Sec.FunctionCode" value="${APP_C_FW/NOOP_CC}" />
        </ConstraintSet>
      </ContainerDataType>

      <ContainerDataType name="Reset" baseType="CommandBase" shortDescription="Reset app to a known state">
        <ConstraintSet>
          <ValueConstraint entry="Sec.FunctionCode" value="${APP_C_FW/RESET_CC}" />
        </ConstraintSet>
      </ContainerDataType>
      
      <ContainerDataType name="Peek" baseType="CommandBase" shortDescription="">
        <ConstraintSet>
          <ValueConstraint entry="Sec.FunctionCode" value="${APP_C_FW/APP_BASE_CC} + 0" />
        </ConstraintSet>
        <EntryList>
          <Entry type="Peek_CmdPayload" name="Payload" />
        </EntryList>
      </ContainerDataType>
      
      <ContainerDataType name="Poke" baseType="CommandBase" shortDescription="">
        <ConstraintSet>
          <ValueConstraint entry="Sec.FunctionCode" value="${APP_C_FW/APP_BASE_CC} + 1" />
        </ConstraintSet>
        <EntryList>
          <Entry type="Poke_CmdPayload" name="Payload" />
        </EntryList>
      </ContainerDataType>

      <ContainerDataType name="LoadWithIntDis" baseType="CommandBase" shortDescription="">
        <ConstraintSet>
          <ValueConstraint entry="Sec.FunctionCode" value="${APP_C_FW/APP_BASE_CC} + 2" />
        </ConstraintSet>
        <EntryList>
          <Entry type="LoadWithIntDis_CmdPayload" name="Payload" />
        </EntryList>
      </ContainerDataType>

      <ContainerDataType name="LoadFromFile" baseType="CommandBase" shortDescription="">
        <ConstraintSet>
          <ValueConstraint entry="Sec.FunctionCode" value="${APP_C_FW/APP_BASE_CC} + 3" />
        </ConstraintSet>
        <EntryList>
          <Entry type="LoadFromFile_CmdPayload" name="Payload" />
        </EntryList>
      </ContainerDataType>

      <ContainerDataType name="DumpToEvent" baseType="CommandBase" shortDescription="">
        <ConstraintSet>
          <ValueConstraint entry="Sec.FunctionCode" value="${APP_C_FW/APP_BASE_CC} + 4" />
        </ConstraintSet>
        <EntryList>
          <Entry type="DumpToEvent_CmdPayload" name="Payload" />
        </EntryList>
      </ContainerDataType>

      <ContainerDataType name="DumpToFile" baseType="CommandBase" shortDescription="">
        <ConstraintSet>
          <ValueConstraint entry="Sec.FunctionCode" value="${APP_C_FW/APP_BASE_CC} + 5" />
        </ConstraintSet>
        <EntryList>
          <Entry type="DumpToFile_CmdPayload" name="Payload" />
        </EntryList>
      </ContainerDataType>

      <ContainerDataType name="Fill" baseType="CommandBase" shortDescription="">
        <ConstraintSet>
          <ValueConstraint entry="Sec.FunctionCode" value="${APP_C_FW/APP_BASE_CC} + 6" />
        </ConstraintSet>
        <EntryList>
          <Entry type="Fill_CmdPayload" name="Payload" />
        </EntryList>
      </ContainerDataType>

      <ContainerDataType name="LookupSymbol" baseType="CommandBase" shortDescription="">
        <ConstraintSet>
          <ValueConstraint entry="Sec.FunctionCode" value="${APP_C_FW/APP_BASE_CC} + 7" />
        </ConstraintSet>
        <EntryList>
          <Entry type="LookupSymbol_CmdPayload" name="Payload" />
        </EntryList>
      </ContainerDataType>

      <ContainerDataType name="DumpSymTblToFile" baseType="CommandBase" shortDescription="">
        <ConstraintSet>
          <ValueConstraint entry="Sec.FunctionCode" value="${APP_C_FW/APP_BASE_CC} + 8" />
        </ConstraintSet>
        <EntryList>
          <Entry type="DumpSymTblToFile_CmdPayload" name="Payload" />
        </EntryList>
      </ContainerDataType>

      <ContainerDataType name="EnaEepromWrite" baseType="CommandBase" shortDescription="">
        <ConstraintSet>
          <ValueConstraint entry="Sec.FunctionCode" value="${APP_C_FW/APP_BASE_CC} + 9" />
        </ConstraintSet>
        <EntryList>
          <Entry type="EnaEepromWrite_CmdPayload" name="Payload" />
        </EntryList>
      </ContainerDataType>

      <ContainerDataType name="DisEepromWrite" baseType="CommandBase" shortDescription="">
        <ConstraintSet>
          <ValueConstraint entry="Sec.FunctionCode" value="${APP_C_FW/APP_BASE_CC} + 10" />
        </ConstraintSet>
        <EntryList>
          <Entry type="DisEepromWrite_CmdPayload" name="Payload" />
        </EntryList>
      </ContainerDataType>


      <!--****************************************-->
      <!--**** DataTypeSet: Telemetry Packets ****-->
      <!--****************************************-->

      <ContainerDataType name="StatusTlm" baseType="CFE_HDR/TelemetryHeader">
        <EntryList>
          <Entry type="StatusTlm_Payload" name="Payload" />
        </EntryList>
      </ContainerDataType>
     
    </DataTypeSet>
    
    <ComponentSet>
      <Component name="Application">

        <!--***********************************-->
        <!--**** Component Set: Interfaces ****-->
        <!--***********************************-->

        <RequiredInterfaceSet>

          <Interface name="CMD" shortDescription="Software bus telecommand interface" type="CFE_SB/Telecommand">
            <GenericTypeMapSet>
              <GenericTypeMap name="TelecommandDataType" type="CommandBase" />
            </GenericTypeMapSet>
          </Interface>

          <Interface name="STATUS_TLM" shortDescription="Software bus status telemetry interface" type="CFE_SB/Telemetry">
            <GenericTypeMapSet>
              <GenericTypeMap name="TelemetryDataType" type="StatusTlm" />
            </GenericTypeMapSet>
          </Interface>
        </RequiredInterfaceSet>

        <!--***************************************-->
        <!--**** Component Set: Implementation ****-->
        <!--***************************************-->

        <Implementation>
          <VariableSet>
            <Variable type="BASE_TYPES/uint16" readOnly="true" name="CmdTopicId" initialValue="${CFE_MISSION/MEM_MGR_CMD_TOPICID}" />
            <Variable type="BASE_TYPES/uint16" readOnly="true" name="StatusTlmTopicId" initialValue="${CFE_MISSION/MEM_MGR_STATUS_TLM_TOPICID}" />
          </VariableSet>
          <!-- Assign fixed numbers to the "TopicId" parameter of each interface -->
          <ParameterMapSet>          
            <ParameterMap interface="CMD" parameter="TopicId" variableRef="CmdTopicId" />
            <ParameterMap interface="STATUS_TLM" parameter="TopicId" variableRef="StatusTlmTopicId" />
          </ParameterMapSet>
        </Implementation>
      </Component>
    </ComponentSet>
    
  </Package>
</PackageFile>
